
export function fWebSocket(){

  // Káº¿t ná»‘i WebSocket Ä‘áº¿n server
  const socket = new WebSocket('ws://192.168.1.86:8082');

  clsSetSocket.opensocket(socket);
  clsSetSocket.messagesocket(socket);
  clsSetSocket.errorsocket(socket);
  clsSetSocket.closesocket(socket);
    
  return  clsSetSocket.oncloseSocket(socket);
   
}

class clsSetSocket {

    static opensocket(socket){
      socket.onopen = () => {
        console.log('ðŸ”Œ WebSocket connected');
      };
    }

    static messagesocket(socket){
      socket.onmessage = (event) => {
        console.log('ðŸ“¨ Nháº­n thÃ´ng bÃ¡o:', event.data);

        try {
          const data = JSON.parse(event.data);
          const title = data.title || 'ThÃ´ng bÃ¡o';
          const message = data.message || 'Báº¡n cÃ³ thÃ´ng bÃ¡o má»›i';
          if (Platform.OS === 'android' && Platform.Version >= 33) {
              PermissionsAndroid.request(PermissionsAndroid.PERMISSIONS.POST_NOTIFICATIONS)
              .then((granted) => {
                  if (granted === PermissionsAndroid.RESULTS.GRANTED) {
                    clsPushNotification.showLocalNotification(title, message);
                    console.log("ðŸ“² Notification permission granted");
                  } else {
                    console.log("ðŸš« Notification permission denied");
                  }
              });
          }else{
              showLocalNotification(title, message);
          }
          
        } catch (err) {
          console.warn('Lá»—i xá»­ lÃ½ JSON:', err);
        }
      };
    }

    static errorsocket(socket){
      socket.onerror = (error) => {
        console.error('WebSocket Error:', error.message);
      };
    }

    static closesocket(socket){
      socket.onclose = () => {
        console.log('ðŸ›‘ WebSocket Ä‘Ã³ng');
      };
    }
    
    static oncloseSocket(socket){
      socket.close();
    }

}
